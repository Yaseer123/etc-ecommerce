version: 1

frontend:
  phases:
    preBuild:
      commands:
        - npm install -g pnpm
        - export NODE_OPTIONS="--max-old-space-size=4096"
        - echo "public-hoist-pattern[]=*" > .npmrc
        - echo "shamefully-hoist=true" >> .npmrc
        - echo "strict-peer-dependencies=false" >> .npmrc
        - echo "auto-install-peers=true" >> .npmrc
        - echo "enable-pre-post-scripts=true" >> .npmrc
        - echo "unsafe-perm=true" >> .npmrc
        - pnpm install
        - pnpm approve-builds @parcel/watcher @prisma/client @prisma/engines @sentry/cli prisma sharp
        - npx prisma generate
    build:
      commands:
        - pnpm run build
  artifacts:
    baseDirectory: .next
    files:
      - "**/*"
  cache:
    paths:
      - .next/cache/**/*
      - node_modules/**/*

backend:
  phases:
    preBuild:
      commands:
        - npm install -g pnpm
        - echo "public-hoist-pattern[]=*" > .npmrc
        - echo "shamefully-hoist=true" >> .npmrc
        - echo "strict-peer-dependencies=false" >> .npmrc
        - echo "auto-install-peers=true" >> .npmrc
        - echo "enable-pre-post-scripts=true" >> .npmrc
        - echo "unsafe-perm=true" >> .npmrc
        - pnpm install
        - pnpm approve-builds @parcel/watcher @prisma/client @prisma/engines @sentry/cli prisma sharp
        - npx prisma generate
        - npx prisma migrate deploy
    build:
      commands:
        - pnpm run build
  artifacts:
    baseDirectory: .
    files:
      - "**/*"
  cache:
    paths:
      - node_modules/**/*
